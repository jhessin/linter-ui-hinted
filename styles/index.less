@import "ui-variables";
@import "syntax-variables";

@overlay-shadow:            0 0 4em fade(black, 15%);
@overlay-border-radius:     2px;
@highlight-border-radius:   2px;
@overlay-message-font-size: 0.9em;
@ms: 300ms;

.lint-annotation {
  .states();
  @padding-vertical: 0px;
  @padding-horizontal: 3px;

  opacity:        0.6;
  background:     var(--background-color);
  box-sizing:     content-box !important;
  mix-blend-mode: color;
  border-radius:  @highlight-border-radius;
  padding:        @padding-vertical @padding-horizontal;
  margin:        -@padding-vertical 0 0 -@padding-horizontal }

.lint-annotation-overlay {
  color:            @text-color;
  box-shadow:       @overlay-shadow;
  background-color: @overlay-background-color;

  .message.hidden {
    opacity:     0;
    display:     block !important;
    max-height:  0;
    overflow:    hidden;
    padding-top: 0;
  }

  .message {
    .caret();
    .states();
    transition:    @ms opacity, @ms padding, @ms max-height, @ms * 2 background-color;
    max-width:     40em;
    max-height:    16em;
    opacity:       1;
    border:        1px solid var(--border-color);
    padding:       @component-padding;
    font-size:     @overlay-message-font-size;
    background:    var(--background-color);
    border-radius: 0 @overlay-border-radius @overlay-border-radius @overlay-border-radius }}


.states () {
  &.info    { .bg(@text-color-info) }
  &.success { .bg(@text-color-success) }
  &.warning { .bg(@text-color-warning) }
  &.error   { .bg(@text-color-error) }
  &.fatal   { .bg(@text-color-error) }
  &.highlight { .bg(@background-color-highlight) }
}


.bg (@col) {
  // @bgc: @syntax-background-color;
  --background-color: @col;
  --border-color: var(--background-color, lighten(@col, 2%));
}


.caret () {
  @size:    8px;
  position: relative;

  &::before {
    top:          0;
    left:         -1px;
    content:      "";
    display:      block;
    position:     absolute;
    transform:    translate(0, -100%);
    border-style: solid;
    border-color: transparent transparent var(--background-color);
    border-width: 0 @size @size 0 }}


.braces () {
  &::before { content: "(" }
  &::after  { content: ")" }
}
